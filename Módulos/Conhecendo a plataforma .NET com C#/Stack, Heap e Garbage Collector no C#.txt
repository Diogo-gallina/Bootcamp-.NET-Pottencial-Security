#Stack, Heap e Garbage Collector no C#

##Entendendo a Stack e Heap

- Stack e Heap são dois tipos de memoria que dependendo do tipo da sua variavel ela se encaixa em algum dos dois

- O stack tem esse nome pois ele é uma pilha, ou seja o último elemento a entrar é o ultimo a sair

- No stack é armazenado o nome e o valor da sua variável e a quantidade de memória que ela ocupa (Objetos simples)

- Quando você cria um objeto a variavel do objeto é armazenada no stack, porém ao invés de ter o valor, ela referencia o Heap

- Heap armazena objetos do tipo mais complexo, ou seja classes, métodos, variáveis, coleções...


##Limpeza de memória

- Quando você termina seus métodos memórias simples do tipo stack vão sendo retiradas para não pesar o programa

- O Garbage Collector é um coletor de lixo que limpa todos os dados da memória heap que não tem uma referencia para uma variavel 
em uso

- O GC verifica se os objetos heap tem ligações com a memória stack, caso não tenha o GC faz a limpeza

- Sempre crie apenas variaveis que você ira usar, caso contrário apague o código que não será ultil, ou ele ira ocupar uma 
memória desnecessária


##Tipos de valor e referencia

- Uma variavel do tipo de valor contém uma instância do tipo

- Uma variavel do tipo de re4ferencia contém uma referencia a uma instancia do tipo

- Um tipo de valor contém o valor na própria memória stack

- Todo tipo complexo é armazenado na memória heap

- A memória heap é uma memória mais dinamica do que a memória stack pois ela não tem uma ordem especifica de armazenar 
ou remover objetos


##Atribuições de tipos 

- Quando você atribui um objeto complexo em um tipo de referencia e faz uma alteração em algum elemento do objeto, ele 
altera diretamente o objeto, pois os dois estão olhando a mesma classe



















