
#Array e Listas


##Introdução Array

- Array conhecido também como matriz ou vetor é uma estrutura de dados que armazena valores do mesmo tipo, com um tamanho fixo.

- Syntaxe para declarar um array: "tipo de dado"[] "nome da variável" = new "tipo de dado"[quantidade de dados]

EXs:
* int[] array = new int[4];

* int[] array = new int{40,55,10};

* string[] nomes= {"Jan", "Fev"};

- Índice é a posicção de um determinado elemento (Sempre começa com 0)

- para acessar um elemento siga a syntaxe int elemento = array["posição"]

- Para mudar o valor de um elemento vc deve fazer: array["Posição"] = "dado desejado"


##Implementando um array de inteiros

- Length é a quantidades de posições do seu array


##Percorrendo um array com FOREACH

- Syntaxe:
foreach(int valor in arrayInteiros)
{
    Console.WriteLine(valor);
}

- O foreach significa "para cada"

- Ou seja para cada elemento do array ele coloca a informação em uma variavel criada

- a desvantagem do foreach é que o contador tem que ser criado a parte


##Redimensionando um Array

- Quando você declara o tamanho de um array ele fica com o mesmo tamanho para sempre após a compilação, e caso você crie um código que precisa 
de manutenção pelo array não ter um limite necessário, não basta apenas mudar o tamanho do array na declaração, é necessário ultilizar uma ferramenta do C# que é
o Array.Resize que possibilita você aumentar a capacidade do seu array

- Syntaxe do Array.Resize: Array.Resize(ref "nome do array que deve ser alterado", "nome do array".Length "quantidade que deseja aumentar")
EX: 
Array.Resize(ref arrayInteiros, arrayInteiros.Length * 2);


##Trabalhando com listas

- Uma lista é uma extensão de um array

- Em uma lista não é necessário definir uma capacidade do array

- Syntaxe de uma lista: List<"tipo de dado"> "Nome de variavel" = new List<"tipo de dado">();
EX:
List <string> listString = new List<string>();

- Syntaxe para adicionar um elemento em uma lista: "Nome da lista".Add("informação")
EX:
listaString.Add("SP");

- Syntaxe para percorrer a lista com foreach:

int contadorForeach = 0;
foreach(string item in listaString)
{
    Console.WriteLine($"Posição N° {contadorForeach} - {item}");
    contadorForeach++;
}

- O .Count tem a mesma função do Length, porém o Length é usado para ler a capacidade do array, e como uma lista não tem uma capacidade
definida, tem a ferramenta .Count que vai contando os elementos a serem adicionados ou excluidos

- Syntaxe para remover um item de uma lista: listaString.Remove("dado da lista");
